apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgweb.fullname" . }}
  labels:
{{ include "pgweb.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pgweb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pgweb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.app.env | nindent 12 }}
          ports:
            - name: pgweb
              containerPort: {{ .Values.app.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.app.healthPath }}
              port: pgweb
          readinessProbe:
            httpGet:
              path: {{ .Values.app.healthPath }}
              port: pgweb
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx
          image: nginx:alpine
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]
          workingDir: /var/www
          volumeMounts:
          - name: {{ .Release.Name }}-nginx
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          - name: htpasswd
            mountPath: /etc/nginx/htpasswd
            subPath: auth
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-nginx
        name: {{ .Release.Name }}-nginx
      - name: htpasswd
        secret:
          secretName: basicauth
